<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACsAAAAlCAIAAABUNYfnAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vwAADr8BOAVTJAAAAcBJREFUWEftliGWgzAQhvdOUShUFRdAoapwUT1AHCoH6AWiUKg6FCoKhUOhULiq
        TcLwoAVKMt28NXyuIa/z8TNM+Hn+N18bDL1mgF8I8AZ9nbMkJBNhwvK6h2suIA3ags7FZ0JatLDDGpRB
        l6dQck2ad7DLEoyBzAIot0WQSdhnB8Kgza9QbJtr7vQkEAaSf4pAhcCdQkAY9I8b1Nrm9nB6JTB90BcU
        im1BC7d3EmOgWyHdfhJB6tYECpyBGoWNWE2EkIrGfThiDQx9UwrOGWOci7LBDETFVwaKQfI4jLnEHwy2
        BkNbV4Z6MfJ0+bEfgleJbtrcHptZGSwbL2Al/GtX0GU7BrQAuaFk8/bD1rQweH//E9GMF2QGKyPTNG5E
        AisjB/PBwmA1AwNWmRi6YnlApWMEQzUHMHIwI20MXm9VkwgTbX2PYIGQ6F7rpfYtAM3nowpnADGoBw6/
        CTHtsQ5A48UAYpiPSXMgbgWg8GQwxlBN17JqJwCFLwPzOTQ1o2rD/Q8nfwYkyqQ0zRjdpczmrnzDo4G6
        dyF0MzIh9r8c/RqQKI4v5BLHuwEo/BrYcBr8gYFnToPTQHMa/L/B8/kL6nr2uSj6cDoAAAAASUVORK5C
        YII=
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADwAAAAxCAIAAAAJAF37AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vwAADr8BOAVTJAAAAe1JREFUaEPtlLuKwkAUhtc38Q18DN/Acks7SwsfIYWFsK2lxYIWIjZaqWijheIF
        FRQNKhqM4JBISLWanB0nF0OusyvMz9eYiZkvycn/kWvE3g4mTQsmTQsmTQsmbWXw+d2zHAxMhNLcpHxS
        VFVZjiZx01JAIpKOV3bjq4oj7HdpznyOfyKQbqe6FwFsiVwvX6W25WRfhCzNDfMrCSxtInVawxBGJUzp
        4rojgh1ERs0FQvADwq/WSdMfvRKWdKJ+5GXQ0oNOx2wBlpamJRGWfBKGdC87lYyPU+Gn8wR5TmFeE+9N
        QkSWanW/bRhUuqD3Gpn74A601XZ6hJCMyhX9+xtYxv3RhoZ7c0kQ6XjlYHrvqnjOF7VVKGk9z6pOts48
        HISg08FzG/qVtuk1YbtJadvb3AwhFy9t+kSFP+K1Df1Ic8Ov7Q32g9z6Xb3LtJGAg5bgUXG6ggv8SFcF
        wzN+qljn2xo8KpbbuwoZvIUzAaWfL91uJF7F/l9UpHGvOY7Eq+D3g9swcmncsq5G4lXwqGhNH610aZbR
        ey3XyCxM35PX3JpVuFSyOkvhLZzxI00QorQHmDSOgmQbYNGQ/yO9502nafBjWCbDpF3CpF3DpH/DpG0I
        KP03MGlaMGlaMGlaMGlaMGlaMGlavKF0I/YD4va98vP8cPIAAAAASUVORK5CYII=
</value>
  </data>
</root>